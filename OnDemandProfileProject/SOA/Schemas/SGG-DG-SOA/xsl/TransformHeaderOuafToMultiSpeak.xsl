<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns0="http://xmlns.oracle.com/ouaf" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ns1="http://www.multispeak.org/Version_4.1_Release" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:s1="cpsm_V4.1_Release" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:s3="http://www.w3.org/1999/xlink" xmlns:s2="gml_V4.1_Release" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:tns="http://xmlns.oracle.com/ouaf/multispeak_4.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl tm soap12 ns0 soapenc soap wsdl mime tns xsd http ns1 s1 s3 s2 xp20 bpws bpel2 bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/SGG-DG-SOA/xsd/ouaf/mspcommon.xsd"/>
            <oracle-xsl-mapper:rootElement name="multiSpeakMsgHeader" namespace="http://xmlns.oracle.com/ouaf/multispeak_4.1"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="oramds:/apps/SGG-DG-SOA/xsd/MultiSpeak/mspcommon.xsd"/>
            <oracle-xsl-mapper:rootElement name="MultiSpeakMsgHeader" namespace="http://www.multispeak.org/Version_4.1_Release"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON MAR 16 11:58:14 IST 2015].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
    <ns1:MultiSpeakMsgHeader>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:majorVersion and string-length(/tns:multiSpeakMsgHeader/tns:majorVersion) > 0">
        <xsl:attribute name="MajorVersion">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:majorVersion"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:minorVersion and string-length(/tns:multiSpeakMsgHeader/tns:minorVersion) > 0">
        <xsl:attribute name="MinorVersion">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:minorVersion"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:build and string-length(/tns:multiSpeakMsgHeader/tns:build) > 0">
        <xsl:attribute name="Build">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:build"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:branch and string-length(/tns:multiSpeakMsgHeader/tns:branch) > 0">
        <xsl:attribute name="Branch">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:branch"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="/tns:multiSpeakMsgHeader/tns:buildString and string-length(/tns:multiSpeakMsgHeader/tns:buildString) > 0">
          <xsl:attribute name="BuildString">
            <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:buildString"/>
          </xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
          <xsl:attribute name="BuildString">
            <xsl:text disable-output-escaping="no">Release</xsl:text>
          </xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:userID and string-length(/tns:multiSpeakMsgHeader/tns:userID) > 0">
        <xsl:attribute name="UserID">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:userID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:pwd and string-length(/tns:multiSpeakMsgHeader/tns:pwd) > 0">
        <xsl:attribute name="Pwd">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:pwd"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:appName and string-length(/tns:multiSpeakMsgHeader/tns:appName) > 0">
        <xsl:attribute name="AppName">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:appName"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:appVersion and string-length(/tns:multiSpeakMsgHeader/tns:appVersion) > 0">
        <xsl:attribute name="AppVersion">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:appVersion"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:company and string-length(/tns:multiSpeakMsgHeader/tns:company) > 0">
        <xsl:attribute name="Company">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:company"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:defaultCurrencyCode and string-length(/tns:multiSpeakMsgHeader/tns:defaultCurrencyCode) > 0">
        <xsl:attribute name="DefaultCurrencyCode">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:defaultCurrencyCode"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:CSUnits and string-length(/tns:multiSpeakMsgHeader/tns:CSUnits) > 0">
        <xsl:attribute name="CSUnits">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:CSUnits"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:coordinateSystemName and string-length(/tns:multiSpeakMsgHeader/tns:coordinateSystemName) > 0">
        <xsl:attribute name="CoordinateSystemName">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:coordinateSystemName"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:coordinateSystemAuthority and string-length(/tns:multiSpeakMsgHeader/tns:coordinateSystemAuthority) > 0">
        <xsl:attribute name="CoordinateSystemAuthority">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:coordinateSystemAuthority"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:coordinateSystemAuthorityCode and string-length(/tns:multiSpeakMsgHeader/tns:coordinateSystemAuthorityCode) > 0">
        <xsl:attribute name="CoordinateSystemAuthorityCode">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:coordinateSystemAuthorityCode"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:datum and string-length(/tns:multiSpeakMsgHeader/tns:datum) > 0">
        <xsl:attribute name="Datum">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:datum"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:sessionID and string-length(/tns:multiSpeakMsgHeader/tns:sessionID) > 0">
        <xsl:attribute name="SessionID">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:sessionID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:previousSessionID and string-length(/tns:multiSpeakMsgHeader/tns:previousSessionID) > 0">
        <xsl:attribute name="PreviousSessionID">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:previousSessionID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:lastSent and string-length(/tns:multiSpeakMsgHeader/tns:lastSent) > 0">
        <xsl:attribute name="ObjectsRemaining">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:objectsRemaining"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:lastSent and string-length(/tns:multiSpeakMsgHeader/tns:lastSent) > 0">
        <xsl:attribute name="LastSent">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:lastSent"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:registrationID and string-length(/tns:multiSpeakMsgHeader/tns:registrationID) > 0">
        <xsl:attribute name="RegistrationID">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:registrationID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:messageID and string-length(/tns:multiSpeakMsgHeader/tns:messageID) > 0">
        <xsl:attribute name="MessageID">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:messageID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:timeStamp and string-length(/tns:multiSpeakMsgHeader/tns:timeStamp) > 0">
        <xsl:attribute name="TimeStamp">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:timeStamp"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:context and string-length(/tns:multiSpeakMsgHeader/tns:context) > 0">
        <xsl:attribute name="Context">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:context"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:auditID and string-length(/tns:multiSpeakMsgHeader/tns:auditID) > 0">
        <xsl:attribute name="AuditID">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:auditID"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/tns:multiSpeakMsgHeader/tns:auditPassword and string-length(/tns:multiSpeakMsgHeader/tns:auditPassword) > 0">
        <xsl:attribute name="AuditPassword">
          <xsl:value-of select="/tns:multiSpeakMsgHeader/tns:auditPassword"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:copy-of select="@*[not(contains(                ' majorVersion minorVersion build branch buildString userID pwd appName appVersion company defaultCurrencyCode csUnits coordinateSystemName coordinateSystemAuthority coordinateSystemAuthorityCode datum sessionID previousSessionID objectsRemaining lastSent registrationID messageID timeStamp context auditID auditPassword ',               concat(' ',name(),' ')))]"/>
    </ns1:MultiSpeakMsgHeader>
  </xsl:template>
</xsl:stylesheet>